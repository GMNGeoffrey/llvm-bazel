# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# Walks commits in the LLVM submodule creating new commits for each update.
# New commits are created on the auto-integrate branch starting from the LLVM
# commit at the main branch (exclusive). Each commit has new LLVM build files
# generated and is tagged with the appropriate LLVM commit.

name: Auto Integrate

on:
  push:
    branches: [main]

jobs:
  auto_integrate:
    runs-on: ubuntu-18.04
    env:
      MERGING_BRANCH: "main"
      INTEGRATION_BRANCH: "auto-integrate"
    steps:
      - name: Checking out repository
        uses: actions/checkout@v2
        with:
          # Get all history. Unfortunately necessary for what we need to do.
          fetch-depth: 0
          submodules: true
          ref: ${{ env.MERGING_BRANCH }}
          token: ${{ secrets.WRITE_ACCESS_TOKEN }}
      - name: Fetching integration branch
        run: |
          git fetch --no-tags --prune origin "${INTEGRATION_BRANCH?}:${INTEGRATION_BRANCH?}"
      - name: Setting git config
        run: |
          git config --local user.email "llvm-bazel-github-bot@google.com"
          git config --local user.name "Auto Integrate Action"
      - name: Merging in changes
        run: |
          if ! git merge-base --is-ancestor "${MERGING_BRANCH?}" "${INTEGRATION_BRANCH?}"; then
            ./scripts/clobber_merge.sh "${INTEGRATION_BRANCH?}" "${MERGING_BRANCH?}"
          else
            echo "${INTEGRATION_BRANCH?} already branches from ${MERGING_BRANCH?}"
          fi
          git checkout "${INTEGRATION_BRANCH?}"
          git submodule update
      - name: Running auto integration
        run: ./scripts/auto_integrate.sh
      - name: Pushing changes
        run: |
          git push origin "${INTEGRATION_BRANCH?}"
          git push origin --force --tags
